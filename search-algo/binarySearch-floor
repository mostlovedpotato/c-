Here the question is to find the no. if present if not find the no. which is lesser than current no. just behind it.

#include<iostream>

using namespace std;

int Floor(int a[], int l, int r, int x) {
	int mid;
	while (r - 1 > 1) {
		mid = l + (r - 1) / 2;
		if (a[mid] <= x) {
			l = mid;
		}
		else {
			r = mid;
		}
	}
	return a[l];
}
//but here we check if first iteration is upto no good becz if(x<a[0]) 
// then there is no use of doing this all 

int floor(int a[], int n, int x) {
	if (x < a[0]) {
		return -1;
	}
	return Floor(a, 0, n, x);
}

int main() {
	
	int a[1000];
	int n;
	int x;
	cin >> n >> x;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	int result = floor(a, n, x);
	if (result == -1) {
		cout<<"Element is not present in the array";
	}
	else {
		cout << "Element is\n" << result;
	}
	return 0;
}
