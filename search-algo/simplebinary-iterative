This is similar except we here don't apply recursion rather use simple while loop till we get the element if present.

#include<iostream>

using namespace std;

int binarySearch(int a[],int l,int r, int x) {
	while(r >= l) {
		int mid = l + (r - 1) / 2;
		if (a[mid] == x) {
			return mid;
		}
		if (a[mid] > x) {
			r = mid - 1;
		}
		else {
			l = mid + 1;
		}
		
	}
	return -1;
}

int main() {
	
	int a[1000];
	int n;
	int x;
	cin >> n >> x;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	int result = binarySearch(a, 0, n - 1, x);
	if (result == -1) {
		cout<<"Element is not present in the array";
	}
	else {
		cout << "Element is present at index" << result;
	}
	return 0;
}
